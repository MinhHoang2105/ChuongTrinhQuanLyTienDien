/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.*;
import controller.Client;
import java.time.LocalDate;
import dao.ThongTinKhachHangDAO;
import java.awt.BorderLayout;
import java.awt.SystemColor;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.BienLaiModel;
import model.DataObject;
import model.HoaDonModel;
import model.SerializableJList;
import model.ThongTinKhachHangModel;
import model.ThongKeModel;
import org.apache.commons.lang3.ArrayUtils;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author minh
 */
public class ClientView extends javax.swing.JFrame implements Runnable {

    DefaultListModel defaultListModel = new DefaultListModel();
    int port;
    Socket clientSocket;
    Client client = new Client();
    DataInputStream dataInputStream;
    DataOutputStream dataOutputStream;
    ObjectOutputStream objectOutputStream;

    /**
     * Creates new form ClientView
     */
    public ClientView() {
        initComponents();
        this.setTitle("Client View");
        clickInTable();
        this.setIconView();
    }

    public ClientView(String taiKhoan) {
        initComponents();
        jTextField_taiKhoan.setText(taiKhoan);
        this.setTitle("Client View");
        clickInTable();
        this.setIconView();
        this.setLocation(400, 100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_thongTinKhachHang = new javax.swing.JPanel();
        jScrollPane_thongTinKhachHang = new javax.swing.JScrollPane();
        jTable_thongTinKhachHang = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField_port = new javax.swing.JTextField();
        jButton_batDau = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField_taiKhoan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_maSoCongTo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField_hoTenChuNha = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_soDienThoai = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField_diaChi = new javax.swing.JTextField();
        jButton_huyTimThongTinKhachHang = new javax.swing.JButton();
        jButton_xoaKhachHang = new javax.swing.JButton();
        jButton_themKhachHang = new javax.swing.JButton();
        jTextField_timKiemKhachHang = new javax.swing.JTextField();
        jButton_xoaFormThongTinKhachHang = new javax.swing.JButton();
        jTextField_phong = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton_suaKhachHang = new javax.swing.JButton();
        jButton_timKiemKhachHang1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel_hoaDon = new javax.swing.JPanel();
        jScrollPane_hoaDon = new javax.swing.JScrollPane();
        jTable_hoaDon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField_maHoaDon = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2_maSoCongTo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_chiSoCu = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField_chiSoMoi = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_soTienPhaiTra = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField_thang = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField_nam = new javax.swing.JTextField();
        jButton_themHoaDon = new javax.swing.JButton();
        jButton_taoChiSoCu = new javax.swing.JButton();
        jButton_thanhToan = new javax.swing.JButton();
        jButton_suaHoaDon1 = new javax.swing.JButton();
        jButton_xoaFormHoaDon1 = new javax.swing.JButton();
        jButton_timKiemHoaDon = new javax.swing.JButton();
        jTextField_timKiemHoaDon = new javax.swing.JTextField();
        jButton_xoaHoaDon1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jButton_timKiemHoaDon1 = new javax.swing.JButton();
        jPanel_bienLai = new javax.swing.JPanel();
        jScrollPane_bienLai = new javax.swing.JScrollPane();
        jTable_bienLai = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jButton_inBienLai = new javax.swing.JButton();
        jTextField_timKiemBienLai = new javax.swing.JTextField();
        jButton_huyTimKiemBienLai = new javax.swing.JButton();
        jButton_timKiemBienLai = new javax.swing.JButton();
        jPanel_thongKe = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel_thongTinKhachHang.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_thongTinKhachHang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_thongTinKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable_thongTinKhachHang.setForeground(new java.awt.Color(0, 0, 0));
        jTable_thongTinKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã số công tơ", "Họ tên người thuê phòng", "Số điện thoại", "Địa chỉ", "Phòng"
            }
        ));
        jScrollPane_thongTinKhachHang.setViewportView(jTable_thongTinKhachHang);

        jPanel_thongTinKhachHang.add(jScrollPane_thongTinKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 570, 460));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 255));
        jLabel3.setText("BẢNG THÔNG TIN KHÁCH HÀNG");
        jPanel_thongTinKhachHang.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 420, 40));

        jTextField_port.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_port.setForeground(new java.awt.Color(0, 153, 255));
        jTextField_port.setText("8888");
        jTextField_port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_portActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_port, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, 120, 30));

        jButton_batDau.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton_batDau.setForeground(new java.awt.Color(0, 153, 255));
        jButton_batDau.setText("Bắt Đầu");
        jButton_batDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_batDauActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_batDau, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 110, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("Xin chào");
        jPanel_thongTinKhachHang.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, 70, -1));

        jTextField_taiKhoan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_taiKhoan.setForeground(new java.awt.Color(0, 153, 255));
        jTextField_taiKhoan.setText("HoangMinh");
        jTextField_taiKhoan.setEnabled(false);
        jTextField_taiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_taiKhoanActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_taiKhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 120, 30));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 255));
        jLabel5.setText("Mã số công tơ:");
        jPanel_thongTinKhachHang.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 200, 20));

        jTextField_maSoCongTo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_maSoCongTo.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_maSoCongTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_maSoCongToActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_maSoCongTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, 190, 40));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 255));
        jLabel6.setText("Họ tên người thuê phòng:");
        jPanel_thongTinKhachHang.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 200, 20));

        jTextField_hoTenChuNha.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_hoTenChuNha.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_hoTenChuNha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_hoTenChuNhaActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_hoTenChuNha, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 180, 190, 40));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 255));
        jLabel7.setText("Số điện thoại:");
        jPanel_thongTinKhachHang.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 200, 20));

        jTextField_soDienThoai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_soDienThoai.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_soDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_soDienThoaiActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_soDienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 240, 190, 40));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 255));
        jLabel8.setText("Địa chỉ:");
        jPanel_thongTinKhachHang.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, 200, 20));

        jTextField_diaChi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_diaChi.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_diaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_diaChiActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_diaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 300, 190, 40));

        jButton_huyTimThongTinKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_huyTimThongTinKhachHang.setForeground(new java.awt.Color(255, 0, 51));
        jButton_huyTimThongTinKhachHang.setText("X");
        jButton_huyTimThongTinKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_huyTimThongTinKhachHangActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_huyTimThongTinKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 510, 50, 40));

        jButton_xoaKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_xoaKhachHang.setForeground(new java.awt.Color(0, 153, 255));
        jButton_xoaKhachHang.setText("Xóa");
        jButton_xoaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_xoaKhachHangActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_xoaKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 450, -1, -1));

        jButton_themKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_themKhachHang.setForeground(new java.awt.Color(0, 153, 255));
        jButton_themKhachHang.setText("Thêm");
        jButton_themKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_themKhachHangActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_themKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 450, -1, -1));

        jTextField_timKiemKhachHang.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_timKiemKhachHang.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_timKiemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_timKiemKhachHangActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_timKiemKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 510, 190, 40));

        jButton_xoaFormThongTinKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_xoaFormThongTinKhachHang.setForeground(new java.awt.Color(0, 153, 255));
        jButton_xoaFormThongTinKhachHang.setText("Xóa Form");
        jButton_xoaFormThongTinKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_xoaFormThongTinKhachHangActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_xoaFormThongTinKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 450, -1, -1));

        jTextField_phong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_phong.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_phong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_phongActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jTextField_phong, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 360, 190, 40));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 255));
        jLabel17.setText("Phòng:");
        jPanel_thongTinKhachHang.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 370, 200, 20));

        jButton_suaKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_suaKhachHang.setForeground(new java.awt.Color(0, 153, 255));
        jButton_suaKhachHang.setText("Sửa");
        jButton_suaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_suaKhachHangActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_suaKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 450, -1, -1));

        jButton_timKiemKhachHang1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_timKiemKhachHang1.setForeground(new java.awt.Color(0, 153, 255));
        jButton_timKiemKhachHang1.setText("Tìm Kiếm");
        jButton_timKiemKhachHang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_timKiemKhachHang1ActionPerformed(evt);
            }
        });
        jPanel_thongTinKhachHang.add(jButton_timKiemKhachHang1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 510, 110, 40));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 255));
        jLabel18.setText("PORT NO.");
        jPanel_thongTinKhachHang.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 70, -1));

        jTabbedPane1.addTab("Thông tin khách hàng", jPanel_thongTinKhachHang);

        jPanel_hoaDon.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_hoaDon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_hoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable_hoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã số công tơ", "Chỉ số cũ", "Chỉ số mới", "Số tiền phải trả", "Tháng", "Năm"
            }
        ));
        jScrollPane_hoaDon.setViewportView(jTable_hoaDon);

        jPanel_hoaDon.add(jScrollPane_hoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 640, 480));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("BẢNG HÓA ĐƠN TIỀN ĐIỆN");
        jPanel_hoaDon.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 350, -1));

        jTextField_maHoaDon.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel_hoaDon.add(jTextField_maHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 60, 190, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setText("Mã số công tơ ");
        jPanel_hoaDon.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 120, -1));

        jTextField2_maSoCongTo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel_hoaDon.add(jTextField2_maSoCongTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 190, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 153, 255));
        jLabel9.setText("Chỉ số cũ");
        jPanel_hoaDon.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 120, -1));

        jTextField_chiSoCu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel_hoaDon.add(jTextField_chiSoCu, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 130, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 153, 255));
        jLabel10.setText("Chỉ số mới");
        jPanel_hoaDon.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 120, -1));

        jTextField_chiSoMoi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel_hoaDon.add(jTextField_chiSoMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 190, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 153, 255));
        jLabel11.setText("Số tiền phải trả");
        jPanel_hoaDon.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 120, -1));

        jTextField_soTienPhaiTra.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_soTienPhaiTra.setEnabled(false);
        jPanel_hoaDon.add(jTextField_soTienPhaiTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 190, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 255));
        jLabel12.setText("Tháng");
        jPanel_hoaDon.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 120, -1));

        jTextField_thang.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel_hoaDon.add(jTextField_thang, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 190, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 153, 255));
        jLabel13.setText("Năm");
        jPanel_hoaDon.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 120, -1));

        jTextField_nam.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel_hoaDon.add(jTextField_nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 190, -1));

        jButton_themHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_themHoaDon.setForeground(new java.awt.Color(51, 153, 255));
        jButton_themHoaDon.setText("Thêm");
        jButton_themHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_themHoaDonActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_themHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        jButton_taoChiSoCu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton_taoChiSoCu.setForeground(new java.awt.Color(51, 153, 255));
        jButton_taoChiSoCu.setText("Tạo");
        jButton_taoChiSoCu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_taoChiSoCuActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_taoChiSoCu, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 50, 30));

        jButton_thanhToan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_thanhToan.setForeground(new java.awt.Color(0, 153, 255));
        jButton_thanhToan.setText("Thanh Toán");
        jButton_thanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_thanhToanActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_thanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, -1, -1));

        jButton_suaHoaDon1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_suaHoaDon1.setForeground(new java.awt.Color(51, 153, 255));
        jButton_suaHoaDon1.setText("Sửa");
        jButton_suaHoaDon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_suaHoaDon1ActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_suaHoaDon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, -1, -1));

        jButton_xoaFormHoaDon1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_xoaFormHoaDon1.setForeground(new java.awt.Color(51, 153, 255));
        jButton_xoaFormHoaDon1.setText("Xóa Form");
        jButton_xoaFormHoaDon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_xoaFormHoaDon1ActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_xoaFormHoaDon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 120, -1));

        jButton_timKiemHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_timKiemHoaDon.setForeground(new java.awt.Color(255, 51, 51));
        jButton_timKiemHoaDon.setText("X");
        jButton_timKiemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_timKiemHoaDonActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_timKiemHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 520, 40, -1));

        jTextField_timKiemHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField_timKiemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_timKiemHoaDonActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jTextField_timKiemHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 180, 40));

        jButton_xoaHoaDon1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_xoaHoaDon1.setForeground(new java.awt.Color(51, 153, 255));
        jButton_xoaHoaDon1.setText("Xóa");
        jButton_xoaHoaDon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_xoaHoaDon1ActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_xoaHoaDon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, -1, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 153, 255));
        jLabel19.setText("Mã hóa đơn");
        jPanel_hoaDon.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 120, -1));

        jButton_timKiemHoaDon1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_timKiemHoaDon1.setForeground(new java.awt.Color(51, 153, 255));
        jButton_timKiemHoaDon1.setText("Tìm Kiếm");
        jButton_timKiemHoaDon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_timKiemHoaDon1ActionPerformed(evt);
            }
        });
        jPanel_hoaDon.add(jButton_timKiemHoaDon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 520, 120, -1));

        jTabbedPane1.addTab("Hóa đơn tiền điện", jPanel_hoaDon);

        jPanel_bienLai.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_bienLai.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_bienLai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable_bienLai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã số công tơ", "Mã hóa đơn", "Họ tên chủ nhà", "Số điện thoại", "Địa chỉ", "Phòng", "Chỉ số cũ", "Chỉ số mới", "Số tiền phải trả", "Tháng", "Năm"
            }
        ));
        jScrollPane_bienLai.setViewportView(jTable_bienLai);

        jPanel_bienLai.add(jScrollPane_bienLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1050, 370));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 153, 255));
        jLabel14.setText("DANH SÁCH BIÊN LAI");
        jPanel_bienLai.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 280, -1));

        jButton_inBienLai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_inBienLai.setForeground(new java.awt.Color(51, 153, 255));
        jButton_inBienLai.setText("In Biên Lai");
        jButton_inBienLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_inBienLaiActionPerformed(evt);
            }
        });
        jPanel_bienLai.add(jButton_inBienLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 500, 130, 50));

        jTextField_timKiemBienLai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField_timKiemBienLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_timKiemBienLaiActionPerformed(evt);
            }
        });
        jPanel_bienLai.add(jTextField_timKiemBienLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 280, 40));

        jButton_huyTimKiemBienLai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_huyTimKiemBienLai.setForeground(new java.awt.Color(255, 0, 51));
        jButton_huyTimKiemBienLai.setText("X");
        jButton_huyTimKiemBienLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_huyTimKiemBienLaiActionPerformed(evt);
            }
        });
        jPanel_bienLai.add(jButton_huyTimKiemBienLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 520, 40, -1));

        jButton_timKiemBienLai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_timKiemBienLai.setForeground(new java.awt.Color(51, 153, 255));
        jButton_timKiemBienLai.setText("Tìm Kiếm");
        jButton_timKiemBienLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_timKiemBienLaiActionPerformed(evt);
            }
        });
        jPanel_bienLai.add(jButton_timKiemBienLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 520, 120, -1));

        jTabbedPane1.addTab("Biên lai", jPanel_bienLai);

        jPanel_thongKe.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_thongKe.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jTabbedPane1.addTab("Thông kê", jPanel_thongKe);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void thongKe() {
        String taiKhoan = jTextField_taiKhoan.getText();
        jPanel_thongKe.setBackground(SystemColor.activeCaptionBorder);

        int nam = 2023;
        Double[] tongTien = client.getTongTien(port, taiKhoan, nam);

        if (tongTien != null) {
            double[] result = ArrayUtils.toPrimitive(tongTien, 0.0);

            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            dataset.setValue(result[0], "", "Tháng 1");
            dataset.setValue(result[1], "", "Tháng 2");
            dataset.setValue(result[2], "", "Tháng 3");
            dataset.setValue(result[3], "", "Tháng 4");
            dataset.setValue(result[4], "", "Tháng 5");
            dataset.setValue(result[5], "", "Tháng 6");
            dataset.setValue(result[6], "", "Tháng 7");
            dataset.setValue(result[7], "", "Tháng 8");
            dataset.setValue(result[8], "", "Tháng 9");
            dataset.setValue(result[9], "", "Tháng 10");
            dataset.setValue(result[10], "", "Tháng 11");
            dataset.setValue(result[11], "", "Tháng 12");
            JFreeChart chart = ChartFactory.createBarChart("Thông kê tiền điện thu được trong năm", "Tháng", "vnđ", dataset);
            jPanel_thongKe.removeAll();
            jPanel_thongKe.setLayout(new BorderLayout());
            jPanel_thongKe.add(new ChartPanel(chart), BorderLayout.CENTER);
            jPanel_thongKe.validate();
        } else {
            // Xử lý trường hợp không nhận được dữ liệu từ server
            System.out.println("Không nhận được dữ liệu từ server");
        }
    }

//1050-615
    public void clickInTable() {
        jTable_thongTinKhachHang.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = jTable_thongTinKhachHang.getSelectedRow();
                jTextField_maSoCongTo.setText(jTable_thongTinKhachHang.getValueAt(selectedRow, 0).toString());
                jTextField_hoTenChuNha.setText(jTable_thongTinKhachHang.getValueAt(selectedRow, 1).toString());
                jTextField_soDienThoai.setText(jTable_thongTinKhachHang.getValueAt(selectedRow, 2).toString());
                jTextField_diaChi.setText(jTable_thongTinKhachHang.getValueAt(selectedRow, 3).toString());
                jTextField_phong.setText(jTable_thongTinKhachHang.getValueAt(selectedRow, 4).toString());
            }
        });

        jTable_hoaDon.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = jTable_hoaDon.getSelectedRow();
                jTextField_maHoaDon.setText(jTable_hoaDon.getValueAt(selectedRow, 0).toString());
                jTextField2_maSoCongTo.setText(jTable_hoaDon.getValueAt(selectedRow, 1).toString());
                jTextField_chiSoCu.setText(jTable_hoaDon.getValueAt(selectedRow, 2).toString());
                jTextField_chiSoMoi.setText(jTable_hoaDon.getValueAt(selectedRow, 3).toString());
                jTextField_soTienPhaiTra.setText(jTable_hoaDon.getValueAt(selectedRow, 4).toString());
                jTextField_thang.setText(jTable_hoaDon.getValueAt(selectedRow, 5).toString());
                jTextField_nam.setText(jTable_hoaDon.getValueAt(selectedRow, 6).toString());
            }
        });

    }

    private void jTextField_portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_portActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_portActionPerformed
    public void displayData(DataObject data) {

        DefaultTableModel tableThongTinKhachHang = (DefaultTableModel) jTable_thongTinKhachHang.getModel();
        // Xóa tất cả các dòng hiện có trong tableThongTinKhachHang
        tableThongTinKhachHang.setRowCount(0);

        // Đẩy dữ liệu vào tableModel
        for (ThongTinKhachHangModel khachHang : data.getListThongTinKhachHang()) {
            Object[] row = {khachHang.getMaSoCongTo(), khachHang.getHoTenChuNha(),
                khachHang.getSoDienThoai(), khachHang.getDiaChi(), khachHang.getPhong()};
            tableThongTinKhachHang.addRow(row);
        }

        DefaultTableModel tableHoaDon = (DefaultTableModel) jTable_hoaDon.getModel();
        // Xóa tất cả các dòng hiện có trong tableHoaDon
        tableHoaDon.setRowCount(0);

        // Đẩy dữ liệu vào tableModel
        for (HoaDonModel hoaDonModel : data.getListHoaDon()) {
            Object[] row = {hoaDonModel.getMaHoaDon(), hoaDonModel.getMaSoCongTo(),
                hoaDonModel.getChiSoCu(), hoaDonModel.getChiSoMoi(), hoaDonModel.getSoTienPhaiTra(),
                hoaDonModel.getThang(), hoaDonModel.getNam()};
            tableHoaDon.addRow(row);
        }

        DefaultTableModel tableBienLai = (DefaultTableModel) jTable_bienLai.getModel();
        // Xóa tất cả các dòng hiện có trong tableThongTinKhachHang
        tableBienLai.setRowCount(0);

        // Đẩy dữ liệu vào tableModel
        for (BienLaiModel bienLaiModel : data.getListBienLai()) {
            Object[] row = {bienLaiModel.getMaSoCongTo(), bienLaiModel.getMaHoaDon(), bienLaiModel.getHoTenChuNha(),
                bienLaiModel.getSoDienThoai(), bienLaiModel.getDiaChi(), bienLaiModel.getPhong(),
                bienLaiModel.getChiSoCu(), bienLaiModel.getChiSoMoi(), bienLaiModel.getSoTienPhaiTra(),
                bienLaiModel.getThang(), bienLaiModel.getNam()};
            tableBienLai.addRow(row);
        }
    }
    private void jButton_batDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_batDauActionPerformed
        // TODO add your handling code here:
        port = Integer.parseInt(jTextField_port.getText());
        System.out.println("Lay dc port");
        try {
            DataObject data = client.clientConnection(port, jTextField_taiKhoan.getText());

            System.out.println("Lay dc data cua: " + jTextField_taiKhoan.getText());
            displayData(data);

            System.out.println("Load thanh cong data cua: " + jTextField_taiKhoan.getText());

            // Tạo và thực hiện ThongKeWorker
            thongKe();
        } catch (Exception e) {
            System.out.println("Loi nut bat dau");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_batDauActionPerformed

    private void jTextField_taiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_taiKhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_taiKhoanActionPerformed

    private void jTextField_maSoCongToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_maSoCongToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_maSoCongToActionPerformed

    private void jTextField_hoTenChuNhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_hoTenChuNhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_hoTenChuNhaActionPerformed

    private void jTextField_soDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_soDienThoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_soDienThoaiActionPerformed

    private void jTextField_diaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_diaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_diaChiActionPerformed

    private void jButton_thanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_thanhToanActionPerformed
        // TODO add your handling code here:
        try {
            HoaDonModel hoaDonModel = getInfoHoaDon();
            if (hoaDonModel == null) {
                return; // Bỏ qua nếu không nhận được thông tin hóa đơn hợp lệ
            }
            ThongTinKhachHangModel thongTinKhachHangModel = client.getThongTinKhachHang(port, hoaDonModel.getTaiKhoan(), hoaDonModel.getMaSoCongTo());
            if (thongTinKhachHangModel == null) {
                return; // Bỏ qua nếu không nhận được thông tin hóa đơn hợp lệ
            }

            BienLaiModel bienLaiModel = new BienLaiModel(hoaDonModel.getTaiKhoan(), hoaDonModel.getMaSoCongTo(), hoaDonModel.getMaHoaDon(),
                    thongTinKhachHangModel.getHoTenChuNha(), thongTinKhachHangModel.getSoDienThoai(),
                    thongTinKhachHangModel.getDiaChi(), thongTinKhachHangModel.getPhong(),
                    hoaDonModel.getChiSoCu(), hoaDonModel.getChiSoMoi(), hoaDonModel.getSoTienPhaiTra(),
                    hoaDonModel.getThang(), hoaDonModel.getNam());

            client.sendNewBienLaiToServer(port, bienLaiModel);
            client.removeHoaDonToServer(port, hoaDonModel);

            int rowIndex = jTable_hoaDon.getSelectedRow();
            if (rowIndex != -1) {
                DefaultTableModel model = (DefaultTableModel) jTable_hoaDon.getModel();
                model.removeRow(rowIndex);
            } else {
                // Không có dòng nào được chọn để xóa
            }

            DefaultTableModel model = (DefaultTableModel) jTable_bienLai.getModel();
            Object[] rowData = {hoaDonModel.getMaSoCongTo(), hoaDonModel.getMaHoaDon(),
                thongTinKhachHangModel.getHoTenChuNha(), thongTinKhachHangModel.getSoDienThoai(),
                thongTinKhachHangModel.getDiaChi(), thongTinKhachHangModel.getPhong(),
                hoaDonModel.getChiSoCu(), hoaDonModel.getChiSoMoi(), hoaDonModel.getSoTienPhaiTra(),
                hoaDonModel.getThang(), hoaDonModel.getNam()};
            model.addRow(rowData);

            thongKe();
        } catch (Exception e) {
            System.out.println("Lỗi Khi Thanh Toan");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_thanhToanActionPerformed

    private void jButton_xoaFormHoaDon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_xoaFormHoaDon1ActionPerformed
        // TODO add your handling code here:
        jTextField_maHoaDon.setText("");
        jTextField2_maSoCongTo.setText("");
        jTextField_chiSoCu.setText("");
        jTextField_chiSoMoi.setText("");
        jTextField_soTienPhaiTra.setText("");
        jTextField_thang.setText("");
        jTextField_nam.setText("");
    }//GEN-LAST:event_jButton_xoaFormHoaDon1ActionPerformed

    private void jTextField_timKiemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_timKiemKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_timKiemKhachHangActionPerformed

    private void jButton_xoaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_xoaKhachHangActionPerformed
        // TODO add your handling code here:                                                      
        try {
            ThongTinKhachHangModel khachHangModel = getInfoThongTinKhachHang();
            client.removeAThongTinKhachHangToServer(port, khachHangModel);

            int rowIndex = jTable_thongTinKhachHang.getSelectedRow();
            if (rowIndex != -1) {
                DefaultTableModel model = (DefaultTableModel) jTable_thongTinKhachHang.getModel();
                model.removeRow(rowIndex);
            } else {
                // Không có dòng nào được chọn để xóa
            }

        } catch (Exception e) {
            System.out.println("Loi ham xoa mot khach hang");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_xoaKhachHangActionPerformed

    private void jTextField_timKiemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_timKiemHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_timKiemHoaDonActionPerformed

    private void jTextField_timKiemBienLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_timKiemBienLaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_timKiemBienLaiActionPerformed

    private void jButton_themKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_themKhachHangActionPerformed
        try {
            ThongTinKhachHangModel khachHangModel = getInfoThongTinKhachHang();
            client.sendNewThongTinKhachHangToServer(port, khachHangModel);

            DefaultTableModel model = (DefaultTableModel) jTable_thongTinKhachHang.getModel();
            Object[] rowData = {khachHangModel.getMaSoCongTo(), khachHangModel.getHoTenChuNha(), khachHangModel.getSoDienThoai(),
                khachHangModel.getDiaChi(), khachHangModel.getPhong()};
            model.addRow(rowData);

        } catch (Exception e) {
            System.out.println("Loi ham them moi khach hang");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_themKhachHangActionPerformed

    private void jTextField_phongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_phongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_phongActionPerformed

    private void jButton_huyTimThongTinKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_huyTimThongTinKhachHangActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(jTable_thongTinKhachHang.getModel());
        jTable_thongTinKhachHang.setRowSorter(sorter1);

        String text = ""; // Lấy từ khóa tìm kiếm từ JTextField
        if (text.length() == 0) {
            sorter1.setRowFilter(null); // Nếu không có từ khóa tìm kiếm thì hiển thị toàn bộ dữ liệu
        } else {
            sorter1.setRowFilter(RowFilter.regexFilter(text)); // Áp dụng bộ lọc với từ khóa tìm kiếm
        }

        jTextField_timKiemKhachHang.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortTable();
            }

            private void sortTable() {
                sorter1.sort(); // Sắp xếp và lọc dữ liệu
            }
        });
    }//GEN-LAST:event_jButton_huyTimThongTinKhachHangActionPerformed

    private void jButton_timKiemKhachHang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_timKiemKhachHang1ActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(jTable_thongTinKhachHang.getModel());
        jTable_thongTinKhachHang.setRowSorter(sorter1);

        String text = jTextField_timKiemKhachHang.getText(); // Lấy từ khóa tìm kiếm từ JTextField
        if (text.length() == 0) {
            sorter1.setRowFilter(null); // Nếu không có từ khóa tìm kiếm thì hiển thị toàn bộ dữ liệu
        } else {
            sorter1.setRowFilter(RowFilter.regexFilter(text)); // Áp dụng bộ lọc với từ khóa tìm kiếm
        }

        jTextField_timKiemKhachHang.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortTable();
            }

            private void sortTable() {
                sorter1.sort(); // Sắp xếp và lọc dữ liệu
            }
        });
    }//GEN-LAST:event_jButton_timKiemKhachHang1ActionPerformed

    private void jButton_xoaFormThongTinKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_xoaFormThongTinKhachHangActionPerformed
        // TODO add your handling code here:
        jTextField_maSoCongTo.setText("");
        jTextField_hoTenChuNha.setText("");
        jTextField_soDienThoai.setText("");
        jTextField_diaChi.setText("");
        jTextField_phong.setText("");
    }//GEN-LAST:event_jButton_xoaFormThongTinKhachHangActionPerformed

    public HoaDonModel getInfoHoaDon() {
        String taiKhoan = jTextField_taiKhoan.getText();
        String maHoaDon = jTextField_maHoaDon.getText();
        String maSoCongTo = jTextField2_maSoCongTo.getText();
        int chiSoCu;
        int chiSoMoi;
        double soTienPhaiTra;
        int thang;
        int nam;

        if (maHoaDon.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập mã hóa đơn!");
            return null;
        }

        if (maSoCongTo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập mã số công tơ!");
            return null;
        }

        try {
            chiSoCu = Integer.parseInt(jTextField_chiSoCu.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mời nhập số cho chỉ số cũ!");
            return null;
        }

        try {
            chiSoMoi = Integer.parseInt(jTextField_chiSoMoi.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mời nhập số cho chỉ số mới!");
            return null;
        }

        int tieuThu = chiSoMoi - chiSoCu;
        if (tieuThu <= 50) {
            soTienPhaiTra = tieuThu * 450;
        } else {
            soTienPhaiTra = (50 * 450) + ((tieuThu - 50) * 800);
        }

        try {
            thang = Integer.parseInt(jTextField_thang.getText());
            if (thang < 1 || thang > 12) {
                JOptionPane.showMessageDialog(this, "Tháng không hợp lệ!");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mời nhập số cho tháng!");
            return null;
        }

        try {
            nam = Integer.parseInt(jTextField_nam.getText());
            if (nam < 1900 || nam > 2100) {
                JOptionPane.showMessageDialog(this, "Năm không hợp lệ!");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mời nhập số cho năm!");
            return null;
        }

        HoaDonModel hoaDonModel = new HoaDonModel(taiKhoan, maHoaDon, maSoCongTo, chiSoCu, chiSoMoi, soTienPhaiTra, thang, nam);
        return hoaDonModel;
    }

    public ThongTinKhachHangModel getInfoThongTinKhachHang() {
        String taiKhoan = jTextField_taiKhoan.getText();
        String maSoCongTo = jTextField_maSoCongTo.getText();
        String hoTenChuNha = jTextField_hoTenChuNha.getText();
        String soDienThoai = jTextField_soDienThoai.getText();
        String diaChi = jTextField_diaChi.getText();
        String phong = jTextField_phong.getText();

        if (maSoCongTo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập mã số công tơ!");
            return null;
        }

        if (hoTenChuNha.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập họ tên chủ nhà!");
            return null;
        }

        if (soDienThoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập số điện thoại!");
            return null;
        }
        if (!soDienThoai.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Mời nhập số cho số diện thoại!");
            return null;
        }
        if (soDienThoai.length() != 10) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có đúng 10 số!");
            return null;
        }

        if (diaChi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập địa chỉ!");
            return null;
        }

        if (phong.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mời nhập thông tin phòng!");
            return null;
        }

        ThongTinKhachHangModel thongTinKhachHangModel = new ThongTinKhachHangModel(taiKhoan, maSoCongTo, hoTenChuNha, soDienThoai, diaChi, phong);

        return thongTinKhachHangModel;
    }
    
    public boolean checkMaCongTo(String maCongTo) {
        DefaultTableModel model = (DefaultTableModel) jTable_thongTinKhachHang.getModel();
        
        for(int row = 0; row < model.getRowCount(); row++) {
            String maRow = (String) model.getValueAt(row, 0);
            if(maCongTo.equals(maRow)) {
                return true;
            }
        }
        return false;
    }

    private void jButton_themHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_themHoaDonActionPerformed
        // TODO add your handling code here:
        try {
            HoaDonModel hoaDonModel = getInfoHoaDon();
            if (hoaDonModel == null) {
                return; // Bỏ qua nếu không nhận được thông tin hóa đơn hợp lệ
            }
            if (checkMaCongTo(hoaDonModel.getMaSoCongTo()) == false) {
                JOptionPane.showMessageDialog(this, "Mã công tơ không tồn tại");
                return;
            }
            
            if (checkMaHoaDon(hoaDonModel.getMaHoaDon()) == true) {
                JOptionPane.showMessageDialog(this, "Mã hóa đơn đã tông tại");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) jTable_hoaDon.getModel();
            Object[] rowData = {hoaDonModel.getMaHoaDon(), hoaDonModel.getMaSoCongTo(), hoaDonModel.getChiSoCu(),
                hoaDonModel.getChiSoMoi(), hoaDonModel.getSoTienPhaiTra(), hoaDonModel.getThang(), hoaDonModel.getNam()};

            if (isDuplicateData(model, rowData)) {
                JOptionPane.showMessageDialog(this, "Dữ liệu trùng lặp");
                return; // Dừng quá trình thêm hóa đơn nếu dữ liệu đã tồn tại trong bảng
            }

            try {
                client.sendNewHoaDonToServer(port, hoaDonModel);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi gửi hóa đơn tới máy chủ");
                return;
            }

            model.addRow(rowData);
        } catch (Exception e) {
            System.out.println("Lỗi khi thêm mới hóa đơn");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_themHoaDonActionPerformed
    public boolean isDuplicateData(DefaultTableModel model, Object[] rowData) {
        for (int i = 0; i < model.getRowCount(); i++) {
            boolean isDuplicate = true;
            for (int j = 0; j < rowData.length; j++) {
                Object valueAtRow = model.getValueAt(i, j);
                if (!rowData[j].equals(valueAtRow)) {
                    isDuplicate = false;
                    break;
                }
            }
            if (isDuplicate) {
                return true; // Dữ liệu đã tồn tại trong bảng
            }
        }
        return false; // Dữ liệu chưa tồn tại trong bảng
    }

    private void jButton_taoChiSoCuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_taoChiSoCuActionPerformed
        // TODO add your handling code here:
        if (jTextField_chiSoMoi.getText() == "") {
            return;
        }
        jTextField_maHoaDon.setText(generateInvoiceCode());

        String soDien = jTextField_chiSoMoi.getText();
        jTextField_chiSoMoi.setText("");
        jTextField_chiSoCu.setText(soDien);
        int thang = Integer.parseInt(jTextField_thang.getText());
        jTextField_thang.setText(thang + 1 + "");
    }//GEN-LAST:event_jButton_taoChiSoCuActionPerformed


    public static String generateInvoiceCode() {
        // Các ký tự cho phép trong mã hóa đơn
        String allowedCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

        // Độ dài của mã hóa đơn
        int invoiceCodeLength = 3;

        StringBuilder invoiceCode = new StringBuilder();

        // Tạo ngẫu nhiên mã hóa đơn
        Random random = new Random();
        for (int i = 0; i < invoiceCodeLength; i++) {
            int randomIndex = random.nextInt(allowedCharacters.length());
            char randomChar = allowedCharacters.charAt(randomIndex);
            invoiceCode.append(randomChar);
        }

        return invoiceCode.toString();
    }
    
    public boolean checkMaHoaDon(String maHoaDon) {
        DefaultTableModel model = (DefaultTableModel) jTable_hoaDon.getModel();
        
        for(int row = 0; row < model.getRowCount(); row++) {
            String maRow = (String) model.getValueAt(row, 1);
            
            if(maHoaDon.equals(maRow)) {
                return true;
            }
        }
        return false;
    }

    private void jButton_suaHoaDon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_suaHoaDon1ActionPerformed
        // TODO add your handling code here:
        try {
            HoaDonModel hoaDonModel = getInfoHoaDon();
            if (hoaDonModel == null) {
                return; // Bỏ qua nếu không nhận được thông tin hóa đơn hợp lệ
            }

            client.updateHoaDonToServer(port, hoaDonModel);

            int rowIndex = jTable_hoaDon.getSelectedRow();
            if (rowIndex != -1) {
                DefaultTableModel model = (DefaultTableModel) jTable_hoaDon.getModel();
                // Sửa giá trị các cột trong dòng đó
                model.setValueAt(hoaDonModel.getMaHoaDon(), rowIndex, 0);
                model.setValueAt(hoaDonModel.getMaSoCongTo(), rowIndex, 1);
                model.setValueAt(hoaDonModel.getChiSoCu(), rowIndex, 2);
                model.setValueAt(hoaDonModel.getChiSoMoi(), rowIndex, 3);
                model.setValueAt(hoaDonModel.getSoDienThoai(), rowIndex, 4);
                model.setValueAt(hoaDonModel.getThang(), rowIndex, 5);
                model.setValueAt(hoaDonModel.getNam(), rowIndex, 6);
            } else {
                // Không có dòng nào được chọn để sửa
            }
        } catch (Exception e) {
            System.out.println("Lỗi khi sua hóa đơn");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_suaHoaDon1ActionPerformed

    private void jButton_suaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_suaKhachHangActionPerformed
        // TODO add your handling code here:
        try {
            ThongTinKhachHangModel khachHangModel = getInfoThongTinKhachHang();
            client.updateAThongTinKhachHangToServer(port, khachHangModel);

            int rowIndex = jTable_thongTinKhachHang.getSelectedRow();
            if (rowIndex != -1) {
                DefaultTableModel model = (DefaultTableModel) jTable_thongTinKhachHang.getModel();
                // Sửa giá trị các cột trong dòng đó
                model.setValueAt(khachHangModel.getMaSoCongTo(), rowIndex, 0);
                model.setValueAt(khachHangModel.getHoTenChuNha(), rowIndex, 1);
                model.setValueAt(khachHangModel.getSoDienThoai(), rowIndex, 2);
                model.setValueAt(khachHangModel.getDiaChi(), rowIndex, 3);
                model.setValueAt(khachHangModel.getPhong(), rowIndex, 4);
            } else {
                // Không có dòng nào được chọn để sửa
            }
        } catch (Exception e) {
            System.out.println("Loi ham them moi khach hang");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_suaKhachHangActionPerformed

    private void jButton_timKiemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_timKiemHoaDonActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(jTable_hoaDon.getModel());
        jTable_hoaDon.setRowSorter(sorter1);

        String text = ""; // Lấy từ khóa tìm kiếm từ JTextField
        if (text.length() == 0) {
            sorter1.setRowFilter(null); // Nếu không có từ khóa tìm kiếm thì hiển thị toàn bộ dữ liệu
        } else {
            sorter1.setRowFilter(RowFilter.regexFilter(text)); // Áp dụng bộ lọc với từ khóa tìm kiếm
        }

        jTextField_timKiemHoaDon.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortTable();
            }

            private void sortTable() {
                sorter1.sort(); // Sắp xếp và lọc dữ liệu
            }
        });
    }//GEN-LAST:event_jButton_timKiemHoaDonActionPerformed

    private void jButton_huyTimKiemBienLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_huyTimKiemBienLaiActionPerformed
        // TODO add your handling code here::
        TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(jTable_bienLai.getModel());
        jTable_bienLai.setRowSorter(sorter1);

        String text = ""; // Lấy từ khóa tìm kiếm từ JTextField
        if (text.length() == 0) {
            sorter1.setRowFilter(null); // Nếu không có từ khóa tìm kiếm thì hiển thị toàn bộ dữ liệu
        } else {
            sorter1.setRowFilter(RowFilter.regexFilter(text)); // Áp dụng bộ lọc với từ khóa tìm kiếm
        }

        jTextField_timKiemBienLai.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortTable();
            }

            private void sortTable() {
                sorter1.sort(); // Sắp xếp và lọc dữ liệu
            }
        });
    }//GEN-LAST:event_jButton_huyTimKiemBienLaiActionPerformed

    private void jButton_inBienLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_inBienLaiActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable_bienLai.getSelectedRow();
        if (selectedRowIndex != -1) {
            DefaultTableModel model = (DefaultTableModel) jTable_bienLai.getModel();

            // Lấy thông tin từ các ô trong dòng được chọn
            String maSoCongTo = (String) model.getValueAt(selectedRowIndex, 0);
            String maHoaDon = (String) model.getValueAt(selectedRowIndex, 1);
            String hoTenChuNha = (String) model.getValueAt(selectedRowIndex, 2);
            String soDienThoai = (String) model.getValueAt(selectedRowIndex, 3);
            String diaChi = (String) model.getValueAt(selectedRowIndex, 4);
            String phong = (String) model.getValueAt(selectedRowIndex, 5);
            int chiSoCu = (int) model.getValueAt(selectedRowIndex, 6);
            int chiSoMoi = (int) model.getValueAt(selectedRowIndex, 7);
            double soTienPhaiTra = (double) model.getValueAt(selectedRowIndex, 8);
            int thang = (int) model.getValueAt(selectedRowIndex, 9);
            int nam = (int) model.getValueAt(selectedRowIndex, 10);

            // Tạo đối tượng BienLaiModel từ thông tin lấy được
            BienLaiModel bienLaiModel = new BienLaiModel(maSoCongTo, maHoaDon, hoTenChuNha, soDienThoai, diaChi, phong, chiSoCu, chiSoMoi, soTienPhaiTra, thang, nam);

            // Sử dụng đối tượng BienLaiModel theo yêu cầu của bạn
            printBienLai(bienLaiModel);
            JOptionPane.showMessageDialog(this, "Đã in thành công biên lai có mã hóa đơn[" + bienLaiModel.getMaHoaDon() + "]");

        } else {
            // Không có dòng nào được chọn
        }
    }//GEN-LAST:event_jButton_inBienLaiActionPerformed

    private void jButton_xoaHoaDon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_xoaHoaDon1ActionPerformed
        // TODO add your handling code here:                                                      
        try {
            HoaDonModel hoaDonModel = getInfoHoaDon();
            client.removeHoaDonToServer(port, hoaDonModel);

            int rowIndex = jTable_hoaDon.getSelectedRow();
            if (rowIndex != -1) {
                DefaultTableModel model = (DefaultTableModel) jTable_hoaDon.getModel();
                model.removeRow(rowIndex);
            } else {
                // Không có dòng nào được chọn để xóa
            }

        } catch (Exception e) {
            System.out.println("Loi ham xoa mot hoa don");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_xoaHoaDon1ActionPerformed

    private void jButton_timKiemHoaDon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_timKiemHoaDon1ActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(jTable_hoaDon.getModel());
        jTable_hoaDon.setRowSorter(sorter1);

        String text = jTextField_timKiemHoaDon.getText(); // Lấy từ khóa tìm kiếm từ JTextField
        if (text.length() == 0) {
            sorter1.setRowFilter(null); // Nếu không có từ khóa tìm kiếm thì hiển thị toàn bộ dữ liệu
        } else {
            sorter1.setRowFilter(RowFilter.regexFilter(text)); // Áp dụng bộ lọc với từ khóa tìm kiếm
        }

        jTextField_timKiemHoaDon.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortTable();
            }

            private void sortTable() {
                sorter1.sort(); // Sắp xếp và lọc dữ liệu
            }
        });
    }//GEN-LAST:event_jButton_timKiemHoaDon1ActionPerformed

    private void jButton_timKiemBienLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_timKiemBienLaiActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(jTable_bienLai.getModel());
        jTable_bienLai.setRowSorter(sorter1);

        String text = jTextField_timKiemBienLai.getText(); // Lấy từ khóa tìm kiếm từ JTextField
        if (text.length() == 0) {
            sorter1.setRowFilter(null); // Nếu không có từ khóa tìm kiếm thì hiển thị toàn bộ dữ liệu
        } else {
            sorter1.setRowFilter(RowFilter.regexFilter(text)); // Áp dụng bộ lọc với từ khóa tìm kiếm
        }

        jTextField_timKiemBienLai.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortTable();
            }

            private void sortTable() {
                sorter1.sort(); // Sắp xếp và lọc dữ liệu
            }
        });
    }//GEN-LAST:event_jButton_timKiemBienLaiActionPerformed

    public void printBienLai(BienLaiModel bienLaiModel) {
        try {
            PDDocument document = new PDDocument();
            PDPage page = new PDPage();
            document.addPage(page);

            // Load font từ tệp .ttf
            File fontFile = new File("D:\\HOC_KI_II\\Java_Ki_II\\thuVien\\Roboto\\Roboto-BoldItalic.ttf");
            PDType0Font customFont = PDType0Font.load(document, fontFile);

            PDPageContentStream contentStream = new PDPageContentStream(document, page);
            contentStream.setFont(customFont, 36);
            contentStream.beginText();
            contentStream.newLineAtOffset(150, 700);
            contentStream.showText("Biên Lai Tiền Điện");
            contentStream.endText();

            // Đặt font cho contentStream
            contentStream.setFont(customFont, 15);
            float lineHeight = 30; // Khoảng cách dọc giữa các dòng

            // Ví dụ in các thuộc tính của BienLaiModel
            contentStream.beginText();
            contentStream.newLineAtOffset(25, 680);
            contentStream.newLine();
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.newLine();
            contentStream.newLineAtOffset(50, -lineHeight);
            contentStream.showText("Mã hóa đơn: " + bienLaiModel.getMaHoaDon() + "                                   ");
            contentStream.showText("Mã số công tơ: " + bienLaiModel.getMaSoCongTo());
            contentStream.newLine();
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.showText("Họ tên chủ nhà: " + bienLaiModel.getHoTenChuNha() + "        ");
            contentStream.showText("Số điện thoại: " + bienLaiModel.getSoDienThoai());
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.showText("Địa chỉ: " + bienLaiModel.getDiaChi() + "                                   ");
            contentStream.showText("Phòng: " + bienLaiModel.getPhong());
            contentStream.newLine();
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.newLine();
            contentStream.showText("----------------------------------------------------------------------------------");
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.showText("Chỉ số cũ    |   Chỉ số mới   |   Số tiền phải trả     |   Tháng    |   Năm");
            contentStream.newLine();
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.showText("    " + bienLaiModel.getChiSoCu()
                    + "               " + bienLaiModel.getChiSoMoi()
                    + "                   " + bienLaiModel.getSoTienPhaiTra()
                    + "                       " + bienLaiModel.getThang()
                    + "               " + bienLaiModel.getNam());
            contentStream.newLineAtOffset(0, -lineHeight);
            contentStream.newLine();
            contentStream.setFont(customFont, 10);
            contentStream.newLine();
            contentStream.newLineAtOffset(0, -lineHeight);
            LocalDate currentDate = LocalDate.now();
            contentStream.showText("                                                                                                                                       "
                    + "Ngày in biên lai: " + currentDate);
            // In các thuộc tính khác tương tự

            contentStream.endText();
            contentStream.close();

            document.save("BienLai_" + bienLaiModel.getMaHoaDon() + ".pdf");
            document.close();

            JOptionPane.showMessageDialog(this, "Hóa đơn " + bienLaiModel.getMaHoaDon() + " đã được in thành công.");
            System.out.println("Tệp PDF đã được tạo thành công.");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void setIconView() {
//        jButton_huyTimThongTinKhachHang.setIcon(new ImageIcon(Toolkit.getDefaultToolkit().createImage(DangNhapView.class
//                .getResource("/img/icon_huy.jpg"))));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientView().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_batDau;
    private javax.swing.JButton jButton_huyTimKiemBienLai;
    private javax.swing.JButton jButton_huyTimThongTinKhachHang;
    private javax.swing.JButton jButton_inBienLai;
    private javax.swing.JButton jButton_suaHoaDon1;
    private javax.swing.JButton jButton_suaKhachHang;
    private javax.swing.JButton jButton_taoChiSoCu;
    private javax.swing.JButton jButton_thanhToan;
    private javax.swing.JButton jButton_themHoaDon;
    private javax.swing.JButton jButton_themKhachHang;
    private javax.swing.JButton jButton_timKiemBienLai;
    private javax.swing.JButton jButton_timKiemHoaDon;
    private javax.swing.JButton jButton_timKiemHoaDon1;
    private javax.swing.JButton jButton_timKiemKhachHang1;
    private javax.swing.JButton jButton_xoaFormHoaDon1;
    private javax.swing.JButton jButton_xoaFormThongTinKhachHang;
    private javax.swing.JButton jButton_xoaHoaDon1;
    private javax.swing.JButton jButton_xoaKhachHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel_bienLai;
    private javax.swing.JPanel jPanel_hoaDon;
    private javax.swing.JPanel jPanel_thongKe;
    private javax.swing.JPanel jPanel_thongTinKhachHang;
    private javax.swing.JScrollPane jScrollPane_bienLai;
    private javax.swing.JScrollPane jScrollPane_hoaDon;
    private javax.swing.JScrollPane jScrollPane_thongTinKhachHang;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_bienLai;
    private javax.swing.JTable jTable_hoaDon;
    private javax.swing.JTable jTable_thongTinKhachHang;
    private javax.swing.JTextField jTextField2_maSoCongTo;
    private javax.swing.JTextField jTextField_chiSoCu;
    private javax.swing.JTextField jTextField_chiSoMoi;
    private javax.swing.JTextField jTextField_diaChi;
    private javax.swing.JTextField jTextField_hoTenChuNha;
    private javax.swing.JTextField jTextField_maHoaDon;
    private javax.swing.JTextField jTextField_maSoCongTo;
    private javax.swing.JTextField jTextField_nam;
    private javax.swing.JTextField jTextField_phong;
    private javax.swing.JTextField jTextField_port;
    private javax.swing.JTextField jTextField_soDienThoai;
    private javax.swing.JTextField jTextField_soTienPhaiTra;
    private javax.swing.JTextField jTextField_taiKhoan;
    private javax.swing.JTextField jTextField_thang;
    private javax.swing.JTextField jTextField_timKiemBienLai;
    private javax.swing.JTextField jTextField_timKiemHoaDon;
    private javax.swing.JTextField jTextField_timKiemKhachHang;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
    }

}
